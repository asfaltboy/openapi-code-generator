/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint:disable */

import cors from "@koa/cors"
import KoaRouter from "@koa/router"
import Koa from "koa"
import koaBody from "koa-body"

const PORT = 3000

// ApiClient
const server = new Koa()

server.use(cors())
server.use(koaBody())

const router = new KoaRouter()

router.get("/app", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/app-manifests/{code}/conversions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/app/installations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/app/installations/{installation_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/app/installations/{installation_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/app/installations/{installation_id}/access_tokens",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/app/installations/{installation_id}/suspended",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/app/installations/{installation_id}/suspended",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/applications/grants", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/applications/grants/{grant_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/applications/grants/{grant_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/applications/{client_id}/grant", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/applications/{client_id}/grants/{access_token}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/applications/{client_id}/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/applications/{client_id}/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/applications/{client_id}/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/applications/{client_id}/tokens/{access_token}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/applications/{client_id}/tokens/{access_token}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/applications/{client_id}/tokens/{access_token}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/apps/{app_slug}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/authorizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/authorizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/authorizations/clients/{client_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put(
  "/authorizations/clients/{client_id}/{fingerprint}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/authorizations/{authorization_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/authorizations/{authorization_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/authorizations/{authorization_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/codes_of_conduct", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/codes_of_conduct/{key}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/content_references/{content_reference_id}/attachments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/emojis", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/feeds", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/gists", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/public", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/starred", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/{gist_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/gists/{gist_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/gists/{gist_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/{gist_id}/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/gists/{gist_id}/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/{gist_id}/comments/{comment_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/gists/{gist_id}/comments/{comment_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/gists/{gist_id}/comments/{comment_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/{gist_id}/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/gists/{gist_id}/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/{gist_id}/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/gists/{gist_id}/star", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/gists/{gist_id}/star", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/{gist_id}/star", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/{gist_id}/{sha}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gitignore/templates", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gitignore/templates/{name}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/installation/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/installation/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/licenses", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/licenses/{license}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/markdown", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/markdown/raw", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/marketplace_listing/accounts/{account_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/marketplace_listing/plans", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/marketplace_listing/plans/{plan_id}/accounts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/marketplace_listing/stubbed/accounts/{account_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/marketplace_listing/stubbed/plans", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/marketplace_listing/stubbed/plans/{plan_id}/accounts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/meta", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/networks/{owner}/{repo}/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/notifications/threads/{thread_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/notifications/threads/{thread_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/notifications/threads/{thread_id}/subscription",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/notifications/threads/{thread_id}/subscription",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/notifications/threads/{thread_id}/subscription",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/organizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/orgs/{org}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/actions/runners", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/actions/runners/downloads", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/orgs/{org}/actions/runners/registration-token",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/orgs/{org}/actions/runners/remove-token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/actions/runners/{runner_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/actions/runners/{runner_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/actions/secrets", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/actions/secrets/public-key", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/actions/secrets/{secret_name}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/{org}/actions/secrets/{secret_name}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/orgs/{org}/actions/secrets/{secret_name}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/{org}/actions/secrets/{secret_name}/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/{org}/actions/secrets/{secret_name}/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/blocks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/blocks/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/{org}/blocks/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/blocks/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/credential-authorizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/orgs/{org}/credential-authorizations/{credential_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/hooks/{hook_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/orgs/{org}/hooks/{hook_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/hooks/{hook_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/hooks/{hook_id}/pings", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/installation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/installations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/{org}/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/{org}/invitations/{invitation_id}/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/memberships/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/{org}/memberships/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/memberships/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/migrations/{migration_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/{org}/migrations/{migration_id}/archive",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/migrations/{migration_id}/archive",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/{org}/migrations/{migration_id}/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/outside_collaborators", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/orgs/{org}/outside_collaborators/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/{org}/outside_collaborators/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/public_members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/public_members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/{org}/public_members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/public_members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/team-sync/groups", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/teams/{team_slug}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/orgs/{org}/teams/{team_slug}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/{org}/teams/{team_slug}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/teams/{team_slug}/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/{org}/teams/{team_slug}/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/teams/{team_slug}/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/{org}/teams/{team_slug}/members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/{org}/teams/{team_slug}/memberships/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/{org}/teams/{team_slug}/memberships/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/teams/{team_slug}/memberships/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/teams/{team_slug}/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/teams/{team_slug}/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/{org}/teams/{team_slug}/team-sync/group-mappings",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/orgs/{org}/teams/{team_slug}/team-sync/group-mappings",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/{org}/teams/{team_slug}/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/columns/cards/{card_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/projects/columns/cards/{card_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/projects/columns/cards/{card_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/columns/cards/{card_id}/moves", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/columns/{column_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/projects/columns/{column_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/projects/columns/{column_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/columns/{column_id}/cards", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/columns/{column_id}/cards", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/columns/{column_id}/moves", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/{project_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/projects/{project_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/projects/{project_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/{project_id}/collaborators", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put(
  "/projects/{project_id}/collaborators/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/projects/{project_id}/collaborators/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/projects/{project_id}/collaborators/{username}/permission",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/projects/{project_id}/columns", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/{project_id}/columns", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/rate_limit", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/reactions/{reaction_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/actions/artifacts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/actions/jobs/{job_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/actions/jobs/{job_id}/logs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/actions/runners", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/actions/runners/downloads",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/actions/runners/registration-token",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/actions/runners/remove-token",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/runners/{runner_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/actions/runners/{runner_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/actions/runs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/actions/runs/{run_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/actions/runs/{run_id}/cancel",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/runs/{run_id}/logs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/actions/runs/{run_id}/logs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/runs/{run_id}/timing",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/actions/secrets", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/actions/secrets/public-key",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/actions/workflows", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/assignees", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/assignees/{assignee}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put(
  "/repos/{owner}/{repo}/automated-security-fixes",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/automated-security-fixes",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/branches", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/branches/{branch}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/branches/{branch}/protection",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/repos/{owner}/{repo}/check-runs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/{owner}/{repo}/check-runs/{check_run_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/check-runs/{check_run_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/repos/{owner}/{repo}/check-suites", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/{owner}/{repo}/check-suites/preferences",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/code-scanning/alerts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/code-scanning/alerts/{alert_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/collaborators", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/collaborators/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/collaborators/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/collaborators/{username}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/collaborators/{username}/permission",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/comments/{comment_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/{owner}/{repo}/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/commits/{commit_sha}/pulls",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/commits/{ref}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/commits/{ref}/check-runs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/commits/{ref}/check-suites",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/commits/{ref}/status", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/commits/{ref}/statuses",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/community/code_of_conduct",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/community/profile", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/compare/{base}...{head}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/contents/{path}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/{owner}/{repo}/contents/{path}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/contents/{path}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/contributors", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/deployments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/deployments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/deployments/{deployment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/deployments/{deployment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/repos/{owner}/{repo}/dispatches", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/git/blobs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/git/blobs/{file_sha}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/git/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/git/commits/{commit_sha}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/git/matching-refs/{ref}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/git/ref/{ref}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/git/refs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/{owner}/{repo}/git/refs/{ref}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/git/refs/{ref}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/git/tags", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/git/tags/{tag_sha}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/git/trees", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/git/trees/{tree_sha}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/hooks/{hook_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/{owner}/{repo}/hooks/{hook_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/hooks/{hook_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/repos/{owner}/{repo}/hooks/{hook_id}/pings",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/hooks/{hook_id}/tests",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put("/repos/{owner}/{repo}/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/{owner}/{repo}/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/import/authors", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/{owner}/{repo}/import/authors/{author_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/import/large_files", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/{owner}/{repo}/import/lfs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/installation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/{owner}/{repo}/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/repos/{owner}/{repo}/invitations/{invitation_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/{owner}/{repo}/invitations/{invitation_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/issues/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/issues/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/{owner}/{repo}/issues/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/issues/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/issues/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/issues/events/{event_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/issues/{issue_number}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/{owner}/{repo}/issues/{issue_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/issues/{issue_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/issues/{issue_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/issues/{issue_number}/events",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/issues/{issue_number}/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/issues/{issue_number}/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/issues/{issue_number}/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/issues/{issue_number}/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/issues/{issue_number}/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/issues/{issue_number}/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/issues/{issue_number}/timeline",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/keys/{key_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/keys/{key_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/labels", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/labels", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/labels/{name}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/{owner}/{repo}/labels/{name}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/labels/{name}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/languages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/license", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/merges", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/milestones", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/milestones", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/milestones/{milestone_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/{owner}/{repo}/milestones/{milestone_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/milestones/{milestone_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/milestones/{milestone_number}/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/{owner}/{repo}/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/{owner}/{repo}/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/pages/builds", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/pages/builds", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/pages/builds/latest", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/pages/builds/{build_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/pulls", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/pulls", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/pulls/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/pulls/{pull_number}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/{owner}/{repo}/pulls/{pull_number}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/commits",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/files",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/readme", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/releases", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/releases", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/releases/assets/{asset_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/{owner}/{repo}/releases/assets/{asset_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/releases/assets/{asset_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/releases/latest", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/releases/tags/{tag}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/releases/{release_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/{owner}/{repo}/releases/{release_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/{owner}/{repo}/releases/{release_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/releases/{release_id}/assets",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{owner}/{repo}/releases/{release_id}/assets",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/stargazers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/stats/code_frequency", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/stats/commit_activity", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/stats/contributors", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/stats/participation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/stats/punch_card", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/statuses/{sha}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/subscribers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/subscription", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/{owner}/{repo}/subscription", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/{owner}/{repo}/subscription", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/tags", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/topics", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/{owner}/{repo}/topics", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/traffic/clones", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/traffic/popular/paths", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/{owner}/{repo}/traffic/popular/referrers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/{owner}/{repo}/traffic/views", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/{owner}/{repo}/transfer", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/{owner}/{repo}/vulnerability-alerts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/{owner}/{repo}/vulnerability-alerts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/repos/{owner}/{repo}/vulnerability-alerts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/{owner}/{repo}/{archive_format}/{ref}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/{template_owner}/{template_repo}/generate",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/scim/v2/organizations/{org}/Users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/scim/v2/organizations/{org}/Users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/scim/v2/organizations/{org}/Users/{scim_user_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/scim/v2/organizations/{org}/Users/{scim_user_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/scim/v2/organizations/{org}/Users/{scim_user_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/scim/v2/organizations/{org}/Users/{scim_user_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/search/code", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/labels", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/topics", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/teams/{team_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/{team_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/teams/{team_id}/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/teams/{team_id}/discussions/{discussion_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/teams/{team_id}/discussions/{discussion_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/teams/{team_id}/discussions/{discussion_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/{team_id}/discussions/{discussion_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/teams/{team_id}/discussions/{discussion_number}/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/{team_id}/discussions/{discussion_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/teams/{team_id}/discussions/{discussion_number}/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/teams/{team_id}/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/{team_id}/members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/{team_id}/members/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/memberships/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/{team_id}/memberships/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/{team_id}/memberships/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/projects/{project_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/{team_id}/projects/{project_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/{team_id}/projects/{project_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/repos/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/{team_id}/repos/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/{team_id}/repos/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/team-sync/group-mappings", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/teams/{team_id}/team-sync/group-mappings", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/{team_id}/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/user", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/blocks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/blocks/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/user/blocks/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/blocks/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/user/email/visibility", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/followers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/following", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/following/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/user/following/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/following/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/gpg_keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/gpg_keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/gpg_keys/{gpg_key_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/gpg_keys/{gpg_key_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/installations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/user/installations/{installation_id}/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/user/installations/{installation_id}/repositories/{repository_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/user/installations/{installation_id}/repositories/{repository_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/user/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/keys/{key_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/keys/{key_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/marketplace_purchases", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/marketplace_purchases/stubbed", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/memberships/orgs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/memberships/orgs/{org}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/user/memberships/orgs/{org}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/migrations/{migration_id}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/migrations/{migration_id}/archive", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/migrations/{migration_id}/archive", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/user/migrations/{migration_id}/repos/{repo_name}/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/user/orgs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/public_emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/repository_invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/user/repository_invitations/{invitation_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/user/repository_invitations/{invitation_id}",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/user/starred", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/starred/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/user/starred/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/starred/{owner}/{repo}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/subscriptions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/{migration_id}/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/events/orgs/{org}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/events/public", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/followers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/following", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/following/{target_user}", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/gists", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/gpg_keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/hovercard", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/installation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/orgs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/received_events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/received_events/public", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/starred", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/{username}/subscriptions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

server.use(router.allowedMethods())
server.use(router.routes())

server.listen(PORT, () => {
  console.info("server listening", { port: PORT })
})

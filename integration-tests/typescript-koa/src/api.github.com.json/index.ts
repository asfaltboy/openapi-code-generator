/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint:disable */

import cors from "@koa/cors"
import KoaRouter from "@koa/router"
import Koa from "koa"
import koaBody from "koa-body"

const PORT = 3000

// ApiClient
const server = new Koa()

server.use(cors())
server.use(koaBody())

const router = new KoaRouter()

router.get("/app", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/app-manifests/:code/conversions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/app/installations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/app/installations/:installationId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/app/installations/:installationId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/app/installations/:installationId/access_tokens",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/app/installations/:installationId/suspended",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/app/installations/:installationId/suspended",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/applications/grants", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/applications/grants/:grantId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/applications/grants/:grantId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/applications/:clientId/grant", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/applications/:clientId/grants/:accessToken",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/applications/:clientId/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/applications/:clientId/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/applications/:clientId/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/applications/:clientId/tokens/:accessToken", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/applications/:clientId/tokens/:accessToken",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/applications/:clientId/tokens/:accessToken",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/apps/:appSlug", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/authorizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/authorizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/authorizations/clients/:clientId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put(
  "/authorizations/clients/:clientId/:fingerprint",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/authorizations/:authorizationId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/authorizations/:authorizationId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/authorizations/:authorizationId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/codes_of_conduct", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/codes_of_conduct/:key", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/content_references/:contentReferenceId/attachments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/emojis", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/feeds", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/gists", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/public", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/starred", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/:gistId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/gists/:gistId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/gists/:gistId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/:gistId/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/gists/:gistId/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/:gistId/comments/:commentId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/gists/:gistId/comments/:commentId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/gists/:gistId/comments/:commentId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/:gistId/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/gists/:gistId/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/:gistId/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/gists/:gistId/star", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/gists/:gistId/star", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/:gistId/star", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gists/:gistId/:sha", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gitignore/templates", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/gitignore/templates/:name", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/installation/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/installation/token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/licenses", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/licenses/:license", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/markdown", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/markdown/raw", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/marketplace_listing/accounts/:accountId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/marketplace_listing/plans", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/marketplace_listing/plans/:planId/accounts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/marketplace_listing/stubbed/accounts/:accountId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/marketplace_listing/stubbed/plans", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/marketplace_listing/stubbed/plans/:planId/accounts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/meta", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/networks/:owner/:repo/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/notifications/threads/:threadId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/notifications/threads/:threadId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/notifications/threads/:threadId/subscription",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/notifications/threads/:threadId/subscription",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/notifications/threads/:threadId/subscription",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/organizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/orgs/:org", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/actions/runners", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/actions/runners/downloads", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/orgs/:org/actions/runners/registration-token",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/orgs/:org/actions/runners/remove-token", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/actions/runners/:runnerId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/actions/runners/:runnerId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/actions/secrets", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/actions/secrets/public-key", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/actions/secrets/:secretName", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/:org/actions/secrets/:secretName", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/actions/secrets/:secretName", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/:org/actions/secrets/:secretName/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/:org/actions/secrets/:secretName/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/actions/secrets/:secretName/repositories/:repositoryId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/:org/blocks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/blocks/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/:org/blocks/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/blocks/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/credential-authorizations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/orgs/:org/credential-authorizations/:credentialId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/:org/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/hooks/:hookId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/orgs/:org/hooks/:hookId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/hooks/:hookId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/hooks/:hookId/pings", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/installation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/installations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/:org/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/invitations/:invitationId/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/memberships/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/:org/memberships/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/memberships/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/migrations/:migrationId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/migrations/:migrationId/archive", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/orgs/:org/migrations/:migrationId/archive",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/migrations/:migrationId/repos/:repoName/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/:org/migrations/:migrationId/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/:org/outside_collaborators", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/orgs/:org/outside_collaborators/:username",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put("/orgs/:org/outside_collaborators/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/public_members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/public_members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/orgs/:org/public_members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/public_members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/team-sync/groups", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/teams/:teamSlug", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/orgs/:org/teams/:teamSlug", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/orgs/:org/teams/:teamSlug", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/teams/:teamSlug/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/orgs/:org/teams/:teamSlug/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/comments/:commentNumber/reactions/:reactionId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/teams/:teamSlug/discussions/:discussionNumber/reactions/:reactionId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/:org/teams/:teamSlug/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/orgs/:org/teams/:teamSlug/members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/:org/teams/:teamSlug/memberships/:username",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/:org/teams/:teamSlug/memberships/:username",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/teams/:teamSlug/memberships/:username",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/:org/teams/:teamSlug/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/:org/teams/:teamSlug/projects/:projectId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/:org/teams/:teamSlug/projects/:projectId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/teams/:teamSlug/projects/:projectId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/:org/teams/:teamSlug/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/orgs/:org/teams/:teamSlug/repos/:owner/:repo",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/orgs/:org/teams/:teamSlug/team-sync/group-mappings",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/orgs/:org/teams/:teamSlug/team-sync/group-mappings",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/orgs/:org/teams/:teamSlug/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/columns/cards/:cardId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/projects/columns/cards/:cardId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/projects/columns/cards/:cardId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/columns/cards/:cardId/moves", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/columns/:columnId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/projects/columns/:columnId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/projects/columns/:columnId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/columns/:columnId/cards", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/columns/:columnId/cards", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/columns/:columnId/moves", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/:projectId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/projects/:projectId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/projects/:projectId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/projects/:projectId/collaborators", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put(
  "/projects/:projectId/collaborators/:username",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/projects/:projectId/collaborators/:username",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/projects/:projectId/collaborators/:username/permission",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/projects/:projectId/columns", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/projects/:projectId/columns", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/rate_limit", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/reactions/:reactionId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/actions/artifacts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/actions/artifacts/:artifactId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/actions/artifacts/:artifactId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/artifacts/:artifactId/:archiveFormat",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/actions/jobs/:jobId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/actions/jobs/:jobId/logs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/actions/runners", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/actions/runners/downloads",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/actions/runners/registration-token",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/actions/runners/remove-token",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/runners/:runnerId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/actions/runners/:runnerId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/actions/runs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/actions/runs/:runId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/actions/runs/:runId/artifacts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/actions/runs/:runId/cancel",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/runs/:runId/jobs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/runs/:runId/logs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/actions/runs/:runId/logs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/actions/runs/:runId/rerun",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/runs/:runId/timing",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/actions/secrets", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/actions/secrets/public-key",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/secrets/:secretName",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/actions/secrets/:secretName",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/actions/secrets/:secretName",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/actions/workflows", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/actions/workflows/:workflowId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/workflows/:workflowId/runs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/actions/workflows/:workflowId/timing",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/assignees", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/assignees/:assignee", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put(
  "/repos/:owner/:repo/automated-security-fixes",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/automated-security-fixes",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/branches", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/branches/:branch", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/branches/:branch/protection",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/branches/:branch/protection",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/repos/:owner/:repo/check-runs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/:owner/:repo/check-runs/:checkRunId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/check-runs/:checkRunId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/check-runs/:checkRunId/annotations",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/repos/:owner/:repo/check-suites", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/:owner/:repo/check-suites/preferences",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/check-suites/:checkSuiteId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/check-suites/:checkSuiteId/check-runs",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/check-suites/:checkSuiteId/rerequest",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/code-scanning/alerts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/code-scanning/alerts/:alertId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/collaborators", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/collaborators/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/collaborators/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/repos/:owner/:repo/collaborators/:username",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/collaborators/:username/permission",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/comments/:commentId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/comments/:commentId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/comments/:commentId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/comments/:commentId/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/comments/:commentId/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/comments/:commentId/reactions/:reactionId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/commits/:commitSha/branches-where-head",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/commits/:commitSha/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/commits/:commitSha/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/commits/:commitSha/pulls",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/commits/:ref", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/commits/:ref/check-runs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/commits/:ref/check-suites",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/commits/:ref/status", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/commits/:ref/statuses", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/community/code_of_conduct",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/community/profile", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/compare/:base...:head", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/contents/:path", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/contents/:path", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/contents/:path", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/contributors", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/deployments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/deployments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/deployments/:deploymentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/deployments/:deploymentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/deployments/:deploymentId/statuses",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/deployments/:deploymentId/statuses",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/deployments/:deploymentId/statuses/:statusId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post("/repos/:owner/:repo/dispatches", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/forks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/git/blobs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/git/blobs/:fileSha", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/git/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/git/commits/:commitSha", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/git/matching-refs/:ref", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/git/ref/:ref", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/git/refs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/git/refs/:ref", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/git/refs/:ref", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/git/tags", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/git/tags/:tagSha", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/git/trees", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/git/trees/:treeSha", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/hooks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/hooks/:hookId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/hooks/:hookId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/hooks/:hookId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/hooks/:hookId/pings", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/hooks/:hookId/tests", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/import", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/import/authors", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/repos/:owner/:repo/import/authors/:authorId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/import/large_files", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/import/lfs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/installation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/interaction-limits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/repos/:owner/:repo/invitations/:invitationId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/:owner/:repo/invitations/:invitationId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/issues/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/issues/comments/:commentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/:owner/:repo/issues/comments/:commentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/issues/comments/:commentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/issues/comments/:commentId/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/issues/comments/:commentId/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/issues/comments/:commentId/reactions/:reactionId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/issues/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/issues/events/:eventId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/issues/:issueNumber", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/issues/:issueNumber", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/repos/:owner/:repo/issues/:issueNumber/assignees",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/issues/:issueNumber/assignees",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/issues/:issueNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/issues/:issueNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/issues/:issueNumber/events",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/issues/:issueNumber/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/issues/:issueNumber/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/issues/:issueNumber/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/issues/:issueNumber/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/issues/:issueNumber/labels/:name",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/issues/:issueNumber/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/issues/:issueNumber/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/issues/:issueNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/issues/:issueNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/issues/:issueNumber/reactions/:reactionId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/issues/:issueNumber/timeline",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/keys/:keyId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/keys/:keyId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/labels", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/labels", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/labels/:name", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/labels/:name", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/labels/:name", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/languages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/license", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/merges", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/milestones", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/milestones", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/milestones/:milestoneNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/:owner/:repo/milestones/:milestoneNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/milestones/:milestoneNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/milestones/:milestoneNumber/labels",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/notifications", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/pages", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/pages/builds", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/pages/builds", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/pages/builds/latest", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/pages/builds/:buildId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/pulls", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/pulls", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/pulls/comments", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/pulls/comments/:commentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/:owner/:repo/pulls/comments/:commentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/pulls/comments/:commentId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/pulls/comments/:commentId/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/pulls/comments/:commentId/reactions/:reactionId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/pulls/:pullNumber", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/pulls/:pullNumber", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/pulls/:pullNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/pulls/:pullNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/pulls/:pullNumber/comments/:commentId/replies",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/pulls/:pullNumber/commits",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/pulls/:pullNumber/files", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/pulls/:pullNumber/merge", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/pulls/:pullNumber/merge", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/pulls/:pullNumber/requested_reviewers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/dismissals",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/pulls/:pullNumber/reviews/:reviewId/events",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/repos/:owner/:repo/pulls/:pullNumber/update-branch",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/readme", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/releases", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/releases", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/releases/assets/:assetId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/repos/:owner/:repo/releases/assets/:assetId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/repos/:owner/:repo/releases/assets/:assetId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/releases/latest", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/releases/tags/:tag", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/releases/:releaseId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/repos/:owner/:repo/releases/:releaseId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/releases/:releaseId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/releases/:releaseId/assets",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/repos/:owner/:repo/releases/:releaseId/assets",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/stargazers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/stats/code_frequency", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/stats/commit_activity", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/stats/contributors", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/stats/participation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/stats/punch_card", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/statuses/:sha", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/subscribers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/subscription", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/subscription", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/subscription", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/tags", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/topics", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/topics", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/traffic/clones", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/traffic/popular/paths", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/repos/:owner/:repo/traffic/popular/referrers",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repos/:owner/:repo/traffic/views", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/repos/:owner/:repo/transfer", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/vulnerability-alerts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/repos/:owner/:repo/vulnerability-alerts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/repos/:owner/:repo/vulnerability-alerts", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/repos/:owner/:repo/:archiveFormat/:ref", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post(
  "/repos/:templateOwner/:templateRepo/generate",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/scim/v2/organizations/:org/Users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/scim/v2/organizations/:org/Users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/scim/v2/organizations/:org/Users/:scimUserId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/scim/v2/organizations/:org/Users/:scimUserId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/scim/v2/organizations/:org/Users/:scimUserId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/scim/v2/organizations/:org/Users/:scimUserId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/search/code", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/commits", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/labels", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/topics", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/search/users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/teams/:teamId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/:teamId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/teams/:teamId/discussions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/teams/:teamId/discussions/:discussionNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/teams/:teamId/discussions/:discussionNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/teams/:teamId/discussions/:discussionNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/:teamId/discussions/:discussionNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/teams/:teamId/discussions/:discussionNumber/comments",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.patch(
  "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/teams/:teamId/discussions/:discussionNumber/comments/:commentNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get(
  "/teams/:teamId/discussions/:discussionNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.post(
  "/teams/:teamId/discussions/:discussionNumber/reactions",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/teams/:teamId/invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/members", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/:teamId/members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/:teamId/members/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/memberships/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/:teamId/memberships/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/:teamId/memberships/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/projects/:projectId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/:teamId/projects/:projectId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/:teamId/projects/:projectId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/repos/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/teams/:teamId/repos/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/teams/:teamId/repos/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/team-sync/group-mappings", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/teams/:teamId/team-sync/group-mappings", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/teams/:teamId/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/user", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/blocks", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/blocks/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/user/blocks/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/blocks/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/user/email/visibility", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/followers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/following", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/following/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/user/following/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/following/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/gpg_keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/gpg_keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/gpg_keys/:gpgKeyId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/gpg_keys/:gpgKeyId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/installations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get(
  "/user/installations/:installationId/repositories",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.put(
  "/user/installations/:installationId/repositories/:repositoryId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/user/installations/:installationId/repositories/:repositoryId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/user/issues", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/keys/:keyId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/keys/:keyId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/marketplace_purchases", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/marketplace_purchases/stubbed", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/memberships/orgs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/memberships/orgs/:org", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch("/user/memberships/orgs/:org", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/migrations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/migrations/:migrationId", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/migrations/:migrationId/archive", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/migrations/:migrationId/archive", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete(
  "/user/migrations/:migrationId/repos/:repoName/lock",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/user/orgs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/public_emails", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.post("/user/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/repository_invitations", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.patch(
  "/user/repository_invitations/:invitationId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.delete(
  "/user/repository_invitations/:invitationId",
  async (ctx, next) => {
    ctx.status = 501
    ctx.body = { error: "not implemented" }
    return next()
  }
)

router.get("/user/starred", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/starred/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.put("/user/starred/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.delete("/user/starred/:owner/:repo", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/subscriptions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/teams", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/user/:migrationId/repositories", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/events/orgs/:org", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/events/public", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/followers", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/following", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/following/:targetUser", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/gists", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/gpg_keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/hovercard", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/installation", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/keys", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/orgs", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/projects", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/received_events", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/received_events/public", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/repos", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/starred", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

router.get("/users/:username/subscriptions", async (ctx, next) => {
  ctx.status = 501
  ctx.body = { error: "not implemented" }
  return next()
})

server.use(router.allowedMethods())
server.use(router.routes())

server.listen(PORT, () => {
  console.info("server listening", { port: PORT })
})
